//МЕТОД простых итераций (МПИ)
//Матрица переменных
A=[5.526 0.305 0.887 0.037 ; 0.658 2.453 0.678 0.192;
0.398 0.232 4.957 0.567 ; 0.081 0.521 0.192 4.988];
//вектор свободных членов
b=[0.774;0.245;0.343;0.263];
clc;//чистим экран
disp("Solution begins");
disp("System:");
[A b]//исходные данные системы
[M,N]=size(A);//размер матрицы
//погрешность членов системы – это погрешность, с которой значения
//матрицы А и вектора b определены
eps0=0.001;
//допустимая погрешность решения – это погрешность, с которой мы
//хотим вычислить решение
eps1=0.01;
//определим число обусловленности
mu=cond(A);
t=inv(A)
printf("Condition number %f\n",mu);
//вычислим нормы матрицы и вектора свободных членов
normA=norm(A,'fro');
normB=norm(b,'fro');
/////////////------------------------
/////////////ОПРЕДЕЛЕНИЕ ПОГРЕШНОСТИ РЕШЕНИЯ
/////////////------------------------
//определим абсолютную и относительную погрешность вычислений
//при учете погрешности измерений eps0 только правой части
//Определите абсолютную погрешность (слайд 27)
Delta=norm(t)*eps0
printf("Absolut error: %f\n",Delta);
//--!!! Добавьте проверку возможности вычисления решения с
//точностью eps1 при найденной погрешности Delta
if(Delta<eps1)
 printf("couldn`t be solved within eps=%f\n",eps1);
end;
//--!!! Определите относительную погрешность (слайд 28)
delta1=mu*eps0;
//определим полную относительную погрешность получаемого решения
//при учете погрешности измерений eps0 матрицы А и вектора b
//--!!! Определите относительную погрешность (слайд 29)
delta2=norm(t)/(1-norm(t)*eps0/normA)*(eps0/normA+eps0/normB)
printf("Solution error\n absolute: %f,\n relative: %f\n",Delta,delta2);
/////////////------------------------
/////////////РЕШЕНИЕ СИCТЕМЫ МЕТОДОМ ПРОСТОЙ ИТЕРАЦИИ
/////////////------------------------
//приводим систему к виду, удобному для метода
E=eye(A);//единичная матрица размера А
// diag(A) матрица с элементами на главной диагонали (остальные –нули):
Diag=diag(A);
for i=1:M
 //--!!! (слайд 34)
   CC(i,:)=A(i,:)/A(i,i)
   B(i)=b(i)/A(i,i)
end;
C=(E-CC);//новая матрица для расчетов
//выясняем условия сходимости итерационного процесса
//по достаточному условию сходимости через норму матрицы МПИ С
normC=norm(C,'fro');
printf("Matrix norm is: %f\n",normC);
//--!!! Добавьте проверку достаточного условия сходимости МПИ
//--!!! (слайд 36)
//--!!! if()
 disp("could be solved using iteration method")
end;
//задаем начальное приближение решения нулевым вектором
X=zeros(N,1);
normBB=norm(B,'fro');
//определяем необходимое число шагов для метода
//--!!! Определите оценку для числа шагов МПИ k
//--!!! Выводится из априорной оценки погрешности (слайд 37)
//--!!! k=
printf("Steps to do: %1.0f\n",k);//округляем до верхнего целого
//основной цикл метода
for i=1:(k+1)
 XK=X;//запоминаем предыдущее решение
 disp(i);//выводим текущий шаг
 X=C*X+B //выводим текущее решение
 delta=norm(XK-X,'fro');//разность между шагами
end;
//оценка относительной погрешности приближенного решения
//--!!! Определите апостериорную погрешность полученного решения
//--!!!deltaX=
printf("Solution error is %f\n ",deltaX);
